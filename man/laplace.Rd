% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{laplace}
\alias{laplace}
\title{Estimation of copula based models for multivariate network meta-analysis.}
\usage{
laplace(logpost, mode, ...)
}
\arguments{
\item{data}{Object of class \code{nc_data} containing the data to analyze.}

\item{prm_init}{Named list of parameters for the proposal distributions of
the \eqn{Z} latent positions and \eqn{\alpha} parameters; the elements'
names must be \code{"z"} and \code{"alpha"} and both need to be a single
number representing the standard deviations of the normal proposal
distributions for each \eqn{z_{ih}^{g}}{z_ih^g} and \eqn{\alpha_g}
respectively.}

\item{random_start}{Length-one logical vector; if \code{TRUE} (default), it
allows the algorithm to start from a random starting point.}

\item{init}{Named list providing user-defined starting values. If provided,
it overrides the value given for \code{random_start}.}
}
\value{
\code{netcopula} returns an object of class \code{\link{nc_mcmc}}.
}
\description{
Estimation of copula based models for multivariate network meta-analysis.
}
\examples{
betabinexch <- function(theta, varargs) {
  eta <- exp(theta[1])/(1 + exp(theta[1]))
  K <- exp(theta[2])
  data <- varargs[[1]]
  y <- data[, 1]
  n <- data[, 2]
  N <- length(y)
  logf <- function(y, n, K, eta) lbeta(K * eta + y, K * (1 - eta) + n - y) -
  lbeta(K * eta, K * (1 - eta))
  val <- sum(logf(y, n, K, eta))
  val <- val + theta[2] - 2 * log(1 + exp(theta[2]))
  return(val)
}
data(cancermortality, package = "LearnBayes")
laplace(betabinexch, c(-7, 6), list(cancermortality))

}
\author{
Sergio Venturini \email{sergio.venturini@unibocconi.it}
}
\references{
Venturini, S. and Graziani, R. (2016), "A Bayesian Copula Based Model for
Multivariate Network Meta-Analysis". Technical report.
}
\seealso{
\code{\link{nc_data-class}},
\code{\link{nc_mcmc}}
}

